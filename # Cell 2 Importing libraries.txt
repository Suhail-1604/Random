# Cell 1: Importing libraries
import pandas as pd
import numpy as np
from sklearn.neighbors import NearestNeighbors
import matplotlib.pyplot as plt

# Cell 2: Load the data
books = pd.read_csv('BX-Books.csv', sep=';', error_bad_lines=False, encoding='latin-1')
ratings = pd.read_csv('BX-Book-Ratings.csv', sep=';', error_bad_lines=False, encoding='latin-1')
users = pd.read_csv('BX-Users.csv', sep=';', error_bad_lines=False, encoding='latin-1')

# Cell 3: Data cleaning and preprocessing
# Remove users with less than 200 ratings and books with less than 100 ratings
user_counts = ratings['User-ID'].value_counts()
ratings = ratings[ratings['User-ID'].isin(user_counts[user_counts >= 200].index)]

book_counts = ratings['ISBN'].value_counts()
ratings = ratings[ratings['ISBN'].isin(book_counts[book_counts >= 100].index)]

# Merge ratings with books to get book titles
merged = pd.merge(ratings, books, on='ISBN')

# Create a pivot table
pivot_table = merged.pivot(index='Book-Title', columns='User-ID', values='Book-Rating').fillna(0)

# Fit the KNN model
model = NearestNeighbors(metric='cosine', algorithm='brute')
model.fit(pivot_table.values)

# Cell 4: Create the recommendation function
def get_recommends(book_title):
    distances, indices = model.kneighbors(pivot_table.loc[book_title].values.reshape(1, -1), n_neighbors=6)
    recommended_books = []
    for i in range(1, len(distances.flatten())):
        recommended_books.append([pivot_table.index[indices.flatten()[i]], distances.flatten()[i]])
    return [book_title, recommended_books]

# Cell 5: Test the recommendation function
print(get_recommends("The Queen of the Damned (Vampire Chronicles (Paperback))"))
