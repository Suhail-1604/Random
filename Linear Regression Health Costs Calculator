# Cell 1: Importing libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# Cell 2: Load the data
url = 'https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/insurance.csv'
data = pd.read_csv(url)

# Cell 3: Data preprocessing and splitting the dataset
# Convert categorical data to numbers
data['sex'] = data['sex'].map({'male': 0, 'female': 1})
data['smoker'] = data['smoker'].map({'yes': 1, 'no': 0})
data = pd.get_dummies(data, columns=['region'], drop_first=True)

# Split the data into training and testing datasets
train_dataset, test_dataset = train_test_split(data, test_size=0.2, random_state=42)

# Pop off the "expenses" column to create labels
train_labels = train_dataset.pop('expenses')
test_labels = test_dataset.pop('expenses')

# Standardize the datasets
scaler = StandardScaler()
train_dataset = scaler.fit_transform(train_dataset)
test_dataset = scaler.transform(test_dataset)

# Cell 4: Create and train the model
model = LinearRegression()
model.fit(train_dataset, train_labels)

# Cell 5: Evaluate the model and visualize the results
# Evaluate the model
predictions = model.predict(test_dataset)
mae = mean_absolute_error(test_labels, predictions)
print(f'Mean Absolute Error: {mae}')

# Plot the results
plt.figure(figsize=(10, 6))
plt.scatter(test_labels, predictions, alpha=0.5)
plt.plot([0, 50000], [0, 50000], 'r')
plt.xlabel('True Values')
plt.ylabel('Predictions')
plt.title('Health Costs Prediction')
plt.show()
